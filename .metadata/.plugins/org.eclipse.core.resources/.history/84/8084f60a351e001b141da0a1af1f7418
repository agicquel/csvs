grammar com.agicquel.csvs.CSVs with org.eclipse.xtext.common.Terminals
generate csvs "http://www.agicquel.com/csvs/CSVs"

//////// TERMINALS /////////
terminal DOUBLE : INT'.'INT;
@Override 
terminal WS: ((' '|'\t'|'\r'|'\n')+)?;


///////// PROGRAM //////////
Model: {Model} WS commands+=Command* WS;

///////// COMMANDS /////////
Command: (CsvCommand WS ';') | {Command} CommentCommand | ControlCommand; 

Block: {Block} '{' WS commands+=Command* WS '}';
ControlCommand: WhileCommand | IfCommand;
WhileCommand: 'while' WS cond=Expression WS body=Block;
IfCommand: 'if' WS cond=Expression WS thenBody=Block WS ('else' WS elseBody=Block WS)?;

CsvCommand: LoadCommand | StoreCommand | CreateCommand | SetCommand | PrintCommand | ExportCommand | DeleteCommand | ApplyCommand | AddCommand | RenameCommand; 
LoadCommand: 'load' WS var=ID WS path=STRING;
StoreCommand: 'store' WS var=ID WS path=STRING;
ExportCommand: 'export_json' WS var=ID WS path=STRING;
CreateCommand: 'create' WS var=ID;
SetCommand: var=CsvsExpr WS '=' WS expression=Expression;
PrintCommand: 'print' WS expression=Expression;
DeleteCommand: 'delete' WS expression=CsvsExpr;
AddCommand: 'add' WS op=('row' | 'col') WS expression=CsvsExpr;
RenameCommand: 'rename' WS col=CsvsExpr WS newname=Expression;

ApplyCommand: 'on' WS selection=CsvsExpr WS if=ApplyFilterCommand? WS exec=ApplyExecCommand;
ApplyFilterCommand: 'filter' WS '(' WS varName=ID WS ':' WS expr=Expression WS  ')';
ApplyExecCommand: 'apply' WS '(' WS varName=ID WS ':' WS expr=Expression WS  ')';

CommentCommand: ML_COMMENT | SL_COMMENT;


/////// EXPRESSIONS ////////
Expression: OrExpr;

OrExpr: left=AddExpr (WS '||' WS right+=AddExpr)*;
AddExpr: left=EqualityExpr (WS '&&' WS right+=EqualityExpr)*;
EqualityExpr: left=ComparaisonExpr (WS op=("==" | "!=") WS right=ComparaisonExpr)?;
ComparaisonExpr: left=PlusOrMinusExpr (WS op=(">=" | "<=" | ">" | "<") WS right=PlusOrMinusExpr)?;
PlusOrMinusExpr: left=MulOrDivExpr (WS op+=("+" | "-") WS right+=MulOrDivExpr)*;
MulOrDivExpr: left=PrimaryExpr (WS op+=('*' | '/' | '%') WS right+=PrimaryExpr)*;
NotExpr: '!' WS expr=PrimaryExpr;
PrimaryExpr: ('(' WS Expression WS ')') | NotExpr | CsvsExpr ;

CsvsExpr: AtomicExpr | Selector | CountExpr | FieldSelect;
Selector: var=ID WS '[' WS expressionCol=CsvsExpr? WS ':' WS expressionRow=CsvsExpr? WS ']' (WS '[' expressionSubCol=CsvsExpr? WS ':' WS expressionSubRow=CsvsExpr WS ']')?;
FieldSelect: 'field' WS var=ID WS '[' WS expression=PrimaryExpr WS ']';
CountExpr: 'count' WS expression=PrimaryExpr;

AtomicExpr:
	{IntConstant} value=INT |
	{DoubleConstant} value=DOUBLE |
	{StringConstant} value=STRING |
	{BoolConstant} value=('true' | 'false') |
	{VariableConstant} value=ID
;


