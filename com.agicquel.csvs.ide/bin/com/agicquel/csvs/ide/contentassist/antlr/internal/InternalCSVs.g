/*
 * generated by Xtext 2.23.0
 */
grammar InternalCSVs;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package com.agicquel.csvs.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.agicquel.csvs.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.agicquel.csvs.services.CSVsGrammarAccess;

}
@parser::members {
	private CSVsGrammarAccess grammarAccess;

	public void setGrammarAccess(CSVsGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLC
entryRuleLC
:
{ before(grammarAccess.getLCRule()); }
	 ruleLC
{ after(grammarAccess.getLCRule()); } 
	 EOF 
;

// Rule LC
ruleLC 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLCAccess().getWSTerminalRuleCall()); }
		(RULE_WS)?
		{ after(grammarAccess.getLCAccess().getWSTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommand
entryRuleCommand
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandAccess().getAlternatives()); }
		(rule__Command__Alternatives)
		{ after(grammarAccess.getCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlock
entryRuleBlock
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockAccess().getGroup()); }
		(rule__Block__Group__0)
		{ after(grammarAccess.getBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleControlCommand
entryRuleControlCommand
:
{ before(grammarAccess.getControlCommandRule()); }
	 ruleControlCommand
{ after(grammarAccess.getControlCommandRule()); } 
	 EOF 
;

// Rule ControlCommand
ruleControlCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getControlCommandAccess().getAlternatives()); }
		(rule__ControlCommand__Alternatives)
		{ after(grammarAccess.getControlCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileCommand
entryRuleWhileCommand
:
{ before(grammarAccess.getWhileCommandRule()); }
	 ruleWhileCommand
{ after(grammarAccess.getWhileCommandRule()); } 
	 EOF 
;

// Rule WhileCommand
ruleWhileCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileCommandAccess().getGroup()); }
		(rule__WhileCommand__Group__0)
		{ after(grammarAccess.getWhileCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfCommand
entryRuleIfCommand
:
{ before(grammarAccess.getIfCommandRule()); }
	 ruleIfCommand
{ after(grammarAccess.getIfCommandRule()); } 
	 EOF 
;

// Rule IfCommand
ruleIfCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfCommandAccess().getGroup()); }
		(rule__IfCommand__Group__0)
		{ after(grammarAccess.getIfCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCsvCommand
entryRuleCsvCommand
:
{ before(grammarAccess.getCsvCommandRule()); }
	 ruleCsvCommand
{ after(grammarAccess.getCsvCommandRule()); } 
	 EOF 
;

// Rule CsvCommand
ruleCsvCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCsvCommandAccess().getAlternatives()); }
		(rule__CsvCommand__Alternatives)
		{ after(grammarAccess.getCsvCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoadCommand
entryRuleLoadCommand
:
{ before(grammarAccess.getLoadCommandRule()); }
	 ruleLoadCommand
{ after(grammarAccess.getLoadCommandRule()); } 
	 EOF 
;

// Rule LoadCommand
ruleLoadCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoadCommandAccess().getGroup()); }
		(rule__LoadCommand__Group__0)
		{ after(grammarAccess.getLoadCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStoreCommand
entryRuleStoreCommand
:
{ before(grammarAccess.getStoreCommandRule()); }
	 ruleStoreCommand
{ after(grammarAccess.getStoreCommandRule()); } 
	 EOF 
;

// Rule StoreCommand
ruleStoreCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStoreCommandAccess().getGroup()); }
		(rule__StoreCommand__Group__0)
		{ after(grammarAccess.getStoreCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExportCommand
entryRuleExportCommand
:
{ before(grammarAccess.getExportCommandRule()); }
	 ruleExportCommand
{ after(grammarAccess.getExportCommandRule()); } 
	 EOF 
;

// Rule ExportCommand
ruleExportCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExportCommandAccess().getGroup()); }
		(rule__ExportCommand__Group__0)
		{ after(grammarAccess.getExportCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateCommand
entryRuleCreateCommand
:
{ before(grammarAccess.getCreateCommandRule()); }
	 ruleCreateCommand
{ after(grammarAccess.getCreateCommandRule()); } 
	 EOF 
;

// Rule CreateCommand
ruleCreateCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateCommandAccess().getGroup()); }
		(rule__CreateCommand__Group__0)
		{ after(grammarAccess.getCreateCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetCommand
entryRuleSetCommand
:
{ before(grammarAccess.getSetCommandRule()); }
	 ruleSetCommand
{ after(grammarAccess.getSetCommandRule()); } 
	 EOF 
;

// Rule SetCommand
ruleSetCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetCommandAccess().getGroup()); }
		(rule__SetCommand__Group__0)
		{ after(grammarAccess.getSetCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrintCommand
entryRulePrintCommand
:
{ before(grammarAccess.getPrintCommandRule()); }
	 rulePrintCommand
{ after(grammarAccess.getPrintCommandRule()); } 
	 EOF 
;

// Rule PrintCommand
rulePrintCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrintCommandAccess().getGroup()); }
		(rule__PrintCommand__Group__0)
		{ after(grammarAccess.getPrintCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeleteCommand
entryRuleDeleteCommand
:
{ before(grammarAccess.getDeleteCommandRule()); }
	 ruleDeleteCommand
{ after(grammarAccess.getDeleteCommandRule()); } 
	 EOF 
;

// Rule DeleteCommand
ruleDeleteCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeleteCommandAccess().getGroup()); }
		(rule__DeleteCommand__Group__0)
		{ after(grammarAccess.getDeleteCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddCommand
entryRuleAddCommand
:
{ before(grammarAccess.getAddCommandRule()); }
	 ruleAddCommand
{ after(grammarAccess.getAddCommandRule()); } 
	 EOF 
;

// Rule AddCommand
ruleAddCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddCommandAccess().getGroup()); }
		(rule__AddCommand__Group__0)
		{ after(grammarAccess.getAddCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRenameCommand
entryRuleRenameCommand
:
{ before(grammarAccess.getRenameCommandRule()); }
	 ruleRenameCommand
{ after(grammarAccess.getRenameCommandRule()); } 
	 EOF 
;

// Rule RenameCommand
ruleRenameCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRenameCommandAccess().getGroup()); }
		(rule__RenameCommand__Group__0)
		{ after(grammarAccess.getRenameCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleApplyCommand
entryRuleApplyCommand
:
{ before(grammarAccess.getApplyCommandRule()); }
	 ruleApplyCommand
{ after(grammarAccess.getApplyCommandRule()); } 
	 EOF 
;

// Rule ApplyCommand
ruleApplyCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getApplyCommandAccess().getGroup()); }
		(rule__ApplyCommand__Group__0)
		{ after(grammarAccess.getApplyCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleApplyFilterCommand
entryRuleApplyFilterCommand
:
{ before(grammarAccess.getApplyFilterCommandRule()); }
	 ruleApplyFilterCommand
{ after(grammarAccess.getApplyFilterCommandRule()); } 
	 EOF 
;

// Rule ApplyFilterCommand
ruleApplyFilterCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getApplyFilterCommandAccess().getGroup()); }
		(rule__ApplyFilterCommand__Group__0)
		{ after(grammarAccess.getApplyFilterCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleApplyExecCommand
entryRuleApplyExecCommand
:
{ before(grammarAccess.getApplyExecCommandRule()); }
	 ruleApplyExecCommand
{ after(grammarAccess.getApplyExecCommandRule()); } 
	 EOF 
;

// Rule ApplyExecCommand
ruleApplyExecCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getApplyExecCommandAccess().getGroup()); }
		(rule__ApplyExecCommand__Group__0)
		{ after(grammarAccess.getApplyExecCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMergeCommand
entryRuleMergeCommand
:
{ before(grammarAccess.getMergeCommandRule()); }
	 ruleMergeCommand
{ after(grammarAccess.getMergeCommandRule()); } 
	 EOF 
;

// Rule MergeCommand
ruleMergeCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMergeCommandAccess().getGroup()); }
		(rule__MergeCommand__Group__0)
		{ after(grammarAccess.getMergeCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConcatCommand
entryRuleConcatCommand
:
{ before(grammarAccess.getConcatCommandRule()); }
	 ruleConcatCommand
{ after(grammarAccess.getConcatCommandRule()); } 
	 EOF 
;

// Rule ConcatCommand
ruleConcatCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConcatCommandAccess().getGroup()); }
		(rule__ConcatCommand__Group__0)
		{ after(grammarAccess.getConcatCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommentCommand
entryRuleCommentCommand
:
{ before(grammarAccess.getCommentCommandRule()); }
	 ruleCommentCommand
{ after(grammarAccess.getCommentCommandRule()); } 
	 EOF 
;

// Rule CommentCommand
ruleCommentCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommentCommandAccess().getAlternatives()); }
		(rule__CommentCommand__Alternatives)
		{ after(grammarAccess.getCommentCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getOrExprParserRuleCall()); }
		ruleOrExpr
		{ after(grammarAccess.getExpressionAccess().getOrExprParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrExpr
entryRuleOrExpr
:
{ before(grammarAccess.getOrExprRule()); }
	 ruleOrExpr
{ after(grammarAccess.getOrExprRule()); } 
	 EOF 
;

// Rule OrExpr
ruleOrExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrExprAccess().getGroup()); }
		(rule__OrExpr__Group__0)
		{ after(grammarAccess.getOrExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddExpr
entryRuleAddExpr
:
{ before(grammarAccess.getAddExprRule()); }
	 ruleAddExpr
{ after(grammarAccess.getAddExprRule()); } 
	 EOF 
;

// Rule AddExpr
ruleAddExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddExprAccess().getGroup()); }
		(rule__AddExpr__Group__0)
		{ after(grammarAccess.getAddExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualityExpr
entryRuleEqualityExpr
:
{ before(grammarAccess.getEqualityExprRule()); }
	 ruleEqualityExpr
{ after(grammarAccess.getEqualityExprRule()); } 
	 EOF 
;

// Rule EqualityExpr
ruleEqualityExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityExprAccess().getGroup()); }
		(rule__EqualityExpr__Group__0)
		{ after(grammarAccess.getEqualityExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparaisonExpr
entryRuleComparaisonExpr
:
{ before(grammarAccess.getComparaisonExprRule()); }
	 ruleComparaisonExpr
{ after(grammarAccess.getComparaisonExprRule()); } 
	 EOF 
;

// Rule ComparaisonExpr
ruleComparaisonExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparaisonExprAccess().getGroup()); }
		(rule__ComparaisonExpr__Group__0)
		{ after(grammarAccess.getComparaisonExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlusOrMinusExpr
entryRulePlusOrMinusExpr
:
{ before(grammarAccess.getPlusOrMinusExprRule()); }
	 rulePlusOrMinusExpr
{ after(grammarAccess.getPlusOrMinusExprRule()); } 
	 EOF 
;

// Rule PlusOrMinusExpr
rulePlusOrMinusExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusOrMinusExprAccess().getGroup()); }
		(rule__PlusOrMinusExpr__Group__0)
		{ after(grammarAccess.getPlusOrMinusExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMulOrDivExpr
entryRuleMulOrDivExpr
:
{ before(grammarAccess.getMulOrDivExprRule()); }
	 ruleMulOrDivExpr
{ after(grammarAccess.getMulOrDivExprRule()); } 
	 EOF 
;

// Rule MulOrDivExpr
ruleMulOrDivExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMulOrDivExprAccess().getGroup()); }
		(rule__MulOrDivExpr__Group__0)
		{ after(grammarAccess.getMulOrDivExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNotExpr
entryRuleNotExpr
:
{ before(grammarAccess.getNotExprRule()); }
	 ruleNotExpr
{ after(grammarAccess.getNotExprRule()); } 
	 EOF 
;

// Rule NotExpr
ruleNotExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotExprAccess().getGroup()); }
		(rule__NotExpr__Group__0)
		{ after(grammarAccess.getNotExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpr
entryRulePrimaryExpr
:
{ before(grammarAccess.getPrimaryExprRule()); }
	 rulePrimaryExpr
{ after(grammarAccess.getPrimaryExprRule()); } 
	 EOF 
;

// Rule PrimaryExpr
rulePrimaryExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getAlternatives()); }
		(rule__PrimaryExpr__Alternatives)
		{ after(grammarAccess.getPrimaryExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCsvsExpr
entryRuleCsvsExpr
:
{ before(grammarAccess.getCsvsExprRule()); }
	 ruleCsvsExpr
{ after(grammarAccess.getCsvsExprRule()); } 
	 EOF 
;

// Rule CsvsExpr
ruleCsvsExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCsvsExprAccess().getAlternatives()); }
		(rule__CsvsExpr__Alternatives)
		{ after(grammarAccess.getCsvsExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelector
entryRuleSelector
:
{ before(grammarAccess.getSelectorRule()); }
	 ruleSelector
{ after(grammarAccess.getSelectorRule()); } 
	 EOF 
;

// Rule Selector
ruleSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectorAccess().getGroup()); }
		(rule__Selector__Group__0)
		{ after(grammarAccess.getSelectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldSelect
entryRuleFieldSelect
:
{ before(grammarAccess.getFieldSelectRule()); }
	 ruleFieldSelect
{ after(grammarAccess.getFieldSelectRule()); } 
	 EOF 
;

// Rule FieldSelect
ruleFieldSelect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldSelectAccess().getGroup()); }
		(rule__FieldSelect__Group__0)
		{ after(grammarAccess.getFieldSelectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCountExpr
entryRuleCountExpr
:
{ before(grammarAccess.getCountExprRule()); }
	 ruleCountExpr
{ after(grammarAccess.getCountExprRule()); } 
	 EOF 
;

// Rule CountExpr
ruleCountExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCountExprAccess().getGroup()); }
		(rule__CountExpr__Group__0)
		{ after(grammarAccess.getCountExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLastExpr
entryRuleLastExpr
:
{ before(grammarAccess.getLastExprRule()); }
	 ruleLastExpr
{ after(grammarAccess.getLastExprRule()); } 
	 EOF 
;

// Rule LastExpr
ruleLastExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLastExprAccess().getGroup()); }
		(rule__LastExpr__Group__0)
		{ after(grammarAccess.getLastExprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomicExpr
entryRuleAtomicExpr
:
{ before(grammarAccess.getAtomicExprRule()); }
	 ruleAtomicExpr
{ after(grammarAccess.getAtomicExprRule()); } 
	 EOF 
;

// Rule AtomicExpr
ruleAtomicExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicExprAccess().getAlternatives()); }
		(rule__AtomicExpr__Alternatives)
		{ after(grammarAccess.getAtomicExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getGroup_0()); }
		(rule__Command__Group_0__0)
		{ after(grammarAccess.getCommandAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getGroup_1()); }
		(rule__Command__Group_1__0)
		{ after(grammarAccess.getCommandAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getControlCommandParserRuleCall_2()); }
		ruleControlCommand
		{ after(grammarAccess.getCommandAccess().getControlCommandParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlCommand__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getControlCommandAccess().getWhileCommandParserRuleCall_0()); }
		ruleWhileCommand
		{ after(grammarAccess.getControlCommandAccess().getWhileCommandParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getControlCommandAccess().getIfCommandParserRuleCall_1()); }
		ruleIfCommand
		{ after(grammarAccess.getControlCommandAccess().getIfCommandParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CsvCommand__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCsvCommandAccess().getLoadCommandParserRuleCall_0()); }
		ruleLoadCommand
		{ after(grammarAccess.getCsvCommandAccess().getLoadCommandParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCsvCommandAccess().getStoreCommandParserRuleCall_1()); }
		ruleStoreCommand
		{ after(grammarAccess.getCsvCommandAccess().getStoreCommandParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCsvCommandAccess().getCreateCommandParserRuleCall_2()); }
		ruleCreateCommand
		{ after(grammarAccess.getCsvCommandAccess().getCreateCommandParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getCsvCommandAccess().getSetCommandParserRuleCall_3()); }
		ruleSetCommand
		{ after(grammarAccess.getCsvCommandAccess().getSetCommandParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getCsvCommandAccess().getPrintCommandParserRuleCall_4()); }
		rulePrintCommand
		{ after(grammarAccess.getCsvCommandAccess().getPrintCommandParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getCsvCommandAccess().getExportCommandParserRuleCall_5()); }
		ruleExportCommand
		{ after(grammarAccess.getCsvCommandAccess().getExportCommandParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getCsvCommandAccess().getDeleteCommandParserRuleCall_6()); }
		ruleDeleteCommand
		{ after(grammarAccess.getCsvCommandAccess().getDeleteCommandParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getCsvCommandAccess().getApplyCommandParserRuleCall_7()); }
		ruleApplyCommand
		{ after(grammarAccess.getCsvCommandAccess().getApplyCommandParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getCsvCommandAccess().getAddCommandParserRuleCall_8()); }
		ruleAddCommand
		{ after(grammarAccess.getCsvCommandAccess().getAddCommandParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getCsvCommandAccess().getRenameCommandParserRuleCall_9()); }
		ruleRenameCommand
		{ after(grammarAccess.getCsvCommandAccess().getRenameCommandParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getCsvCommandAccess().getMergeCommandParserRuleCall_10()); }
		ruleMergeCommand
		{ after(grammarAccess.getCsvCommandAccess().getMergeCommandParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getCsvCommandAccess().getConcatCommandParserRuleCall_11()); }
		ruleConcatCommand
		{ after(grammarAccess.getCsvCommandAccess().getConcatCommandParserRuleCall_11()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCommand__OpAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddCommandAccess().getOpRowKeyword_2_0_0()); }
		'row'
		{ after(grammarAccess.getAddCommandAccess().getOpRowKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAddCommandAccess().getOpColKeyword_2_0_1()); }
		'col'
		{ after(grammarAccess.getAddCommandAccess().getOpColKeyword_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommentCommand__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentCommandAccess().getML_COMMENTTerminalRuleCall_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getCommentCommandAccess().getML_COMMENTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommentCommandAccess().getSL_COMMENTTerminalRuleCall_1()); }
		RULE_SL_COMMENT
		{ after(grammarAccess.getCommentCommandAccess().getSL_COMMENTTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExprAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); }
		'=='
		{ after(grammarAccess.getEqualityExprAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityExprAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
		'!='
		{ after(grammarAccess.getEqualityExprAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparaisonExpr__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparaisonExprAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
		'>='
		{ after(grammarAccess.getComparaisonExprAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparaisonExprAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
		'<='
		{ after(grammarAccess.getComparaisonExprAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparaisonExprAccess().getOpGreaterThanSignKeyword_1_1_0_2()); }
		'>'
		{ after(grammarAccess.getComparaisonExprAccess().getOpGreaterThanSignKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparaisonExprAccess().getOpLessThanSignKeyword_1_1_0_3()); }
		'<'
		{ after(grammarAccess.getComparaisonExprAccess().getOpLessThanSignKeyword_1_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpr__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusExprAccess().getOpPlusSignKeyword_1_1_0_0()); }
		'+'
		{ after(grammarAccess.getPlusOrMinusExprAccess().getOpPlusSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPlusOrMinusExprAccess().getOpHyphenMinusKeyword_1_1_0_1()); }
		'-'
		{ after(grammarAccess.getPlusOrMinusExprAccess().getOpHyphenMinusKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpr__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivExprAccess().getOpAsteriskKeyword_1_1_0_0()); }
		'*'
		{ after(grammarAccess.getMulOrDivExprAccess().getOpAsteriskKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMulOrDivExprAccess().getOpSolidusKeyword_1_1_0_1()); }
		'/'
		{ after(grammarAccess.getMulOrDivExprAccess().getOpSolidusKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getMulOrDivExprAccess().getOpPercentSignKeyword_1_1_0_2()); }
		'%'
		{ after(grammarAccess.getMulOrDivExprAccess().getOpPercentSignKeyword_1_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExprAccess().getGroup_0()); }
		(rule__PrimaryExpr__Group_0__0)
		{ after(grammarAccess.getPrimaryExprAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getNotExprParserRuleCall_1()); }
		ruleNotExpr
		{ after(grammarAccess.getPrimaryExprAccess().getNotExprParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExprAccess().getCsvsExprParserRuleCall_2()); }
		ruleCsvsExpr
		{ after(grammarAccess.getPrimaryExprAccess().getCsvsExprParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CsvsExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCsvsExprAccess().getAtomicExprParserRuleCall_0()); }
		ruleAtomicExpr
		{ after(grammarAccess.getCsvsExprAccess().getAtomicExprParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCsvsExprAccess().getSelectorParserRuleCall_1()); }
		ruleSelector
		{ after(grammarAccess.getCsvsExprAccess().getSelectorParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCsvsExprAccess().getCountExprParserRuleCall_2()); }
		ruleCountExpr
		{ after(grammarAccess.getCsvsExprAccess().getCountExprParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getCsvsExprAccess().getFieldSelectParserRuleCall_3()); }
		ruleFieldSelect
		{ after(grammarAccess.getCsvsExprAccess().getFieldSelectParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getCsvsExprAccess().getLastExprParserRuleCall_4()); }
		ruleLastExpr
		{ after(grammarAccess.getCsvsExprAccess().getLastExprParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LastExpr__OpAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLastExprAccess().getOpRowKeyword_2_0_0()); }
		'row'
		{ after(grammarAccess.getLastExprAccess().getOpRowKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getLastExprAccess().getOpColKeyword_2_0_1()); }
		'col'
		{ after(grammarAccess.getLastExprAccess().getOpColKeyword_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExprAccess().getGroup_0()); }
		(rule__AtomicExpr__Group_0__0)
		{ after(grammarAccess.getAtomicExprAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicExprAccess().getGroup_1()); }
		(rule__AtomicExpr__Group_1__0)
		{ after(grammarAccess.getAtomicExprAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicExprAccess().getGroup_2()); }
		(rule__AtomicExpr__Group_2__0)
		{ after(grammarAccess.getAtomicExprAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicExprAccess().getGroup_3()); }
		(rule__AtomicExpr__Group_3__0)
		{ after(grammarAccess.getAtomicExprAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicExprAccess().getGroup_4()); }
		(rule__AtomicExpr__Group_4__0)
		{ after(grammarAccess.getAtomicExprAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ValueAlternatives_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExprAccess().getValueTrueKeyword_3_1_0_0()); }
		'true'
		{ after(grammarAccess.getAtomicExprAccess().getValueTrueKeyword_3_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicExprAccess().getValueFalseKeyword_3_1_0_1()); }
		'false'
		{ after(grammarAccess.getAtomicExprAccess().getValueFalseKeyword_3_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getModelAction_0()); }
	()
	{ after(grammarAccess.getModelAccess().getModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getModelAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getCommandsAssignment_2()); }
	(rule__Model__CommandsAssignment_2)*
	{ after(grammarAccess.getModelAccess().getCommandsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getModelAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_0__0__Impl
	rule__Command__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getCsvCommandParserRuleCall_0_0()); }
	ruleCsvCommand
	{ after(grammarAccess.getCommandAccess().getCsvCommandParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_0__1__Impl
	rule__Command__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getLCParserRuleCall_0_1()); }
	ruleLC
	{ after(grammarAccess.getCommandAccess().getLCParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getSemicolonKeyword_0_2()); }
	';'
	{ after(grammarAccess.getCommandAccess().getSemicolonKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_1__0__Impl
	rule__Command__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getCommandAction_1_0()); }
	()
	{ after(grammarAccess.getCommandAccess().getCommandAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Command__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandAccess().getCommentCommandParserRuleCall_1_1()); }
	ruleCommentCommand
	{ after(grammarAccess.getCommandAccess().getCommentCommandParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getBlockAction_0()); }
	()
	{ after(grammarAccess.getBlockAccess().getBlockAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__2__Impl
	rule__Block__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getLCParserRuleCall_2()); }
	ruleLC
	{ after(grammarAccess.getBlockAccess().getLCParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__3__Impl
	rule__Block__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getCommandsAssignment_3()); }
	(rule__Block__CommandsAssignment_3)*
	{ after(grammarAccess.getBlockAccess().getCommandsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__4__Impl
	rule__Block__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getLCParserRuleCall_4()); }
	ruleLC
	{ after(grammarAccess.getBlockAccess().getLCParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileCommand__Group__0__Impl
	rule__WhileCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileCommandAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getWhileCommandAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileCommand__Group__1__Impl
	rule__WhileCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileCommandAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getWhileCommandAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileCommand__Group__2__Impl
	rule__WhileCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileCommandAccess().getCondAssignment_2()); }
	(rule__WhileCommand__CondAssignment_2)
	{ after(grammarAccess.getWhileCommandAccess().getCondAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileCommand__Group__3__Impl
	rule__WhileCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileCommandAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getWhileCommandAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileCommand__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileCommandAccess().getBodyAssignment_4()); }
	(rule__WhileCommand__BodyAssignment_4)
	{ after(grammarAccess.getWhileCommandAccess().getBodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group__0__Impl
	rule__IfCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfCommandAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group__1__Impl
	rule__IfCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getIfCommandAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group__2__Impl
	rule__IfCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getCondAssignment_2()); }
	(rule__IfCommand__CondAssignment_2)
	{ after(grammarAccess.getIfCommandAccess().getCondAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group__3__Impl
	rule__IfCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getIfCommandAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group__4__Impl
	rule__IfCommand__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getThenBodyAssignment_4()); }
	(rule__IfCommand__ThenBodyAssignment_4)
	{ after(grammarAccess.getIfCommandAccess().getThenBodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group__5__Impl
	rule__IfCommand__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getLCParserRuleCall_5()); }
	ruleLC
	{ after(grammarAccess.getIfCommandAccess().getLCParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getGroup_6()); }
	(rule__IfCommand__Group_6__0)?
	{ after(grammarAccess.getIfCommandAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfCommand__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group_6__0__Impl
	rule__IfCommand__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getElseKeyword_6_0()); }
	'else'
	{ after(grammarAccess.getIfCommandAccess().getElseKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group_6__1__Impl
	rule__IfCommand__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getLCParserRuleCall_6_1()); }
	ruleLC
	{ after(grammarAccess.getIfCommandAccess().getLCParserRuleCall_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group_6__2__Impl
	rule__IfCommand__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getElseBodyAssignment_6_2()); }
	(rule__IfCommand__ElseBodyAssignment_6_2)
	{ after(grammarAccess.getIfCommandAccess().getElseBodyAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCommand__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfCommandAccess().getLCParserRuleCall_6_3()); }
	ruleLC
	{ after(grammarAccess.getIfCommandAccess().getLCParserRuleCall_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LoadCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoadCommand__Group__0__Impl
	rule__LoadCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadCommandAccess().getLoadKeyword_0()); }
	'load'
	{ after(grammarAccess.getLoadCommandAccess().getLoadKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoadCommand__Group__1__Impl
	rule__LoadCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadCommandAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getLoadCommandAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoadCommand__Group__2__Impl
	rule__LoadCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadCommandAccess().getVarAssignment_2()); }
	(rule__LoadCommand__VarAssignment_2)
	{ after(grammarAccess.getLoadCommandAccess().getVarAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoadCommand__Group__3__Impl
	rule__LoadCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadCommandAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getLoadCommandAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoadCommand__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadCommandAccess().getPathAssignment_4()); }
	(rule__LoadCommand__PathAssignment_4)
	{ after(grammarAccess.getLoadCommandAccess().getPathAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StoreCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoreCommand__Group__0__Impl
	rule__StoreCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreCommandAccess().getStoreKeyword_0()); }
	'store'
	{ after(grammarAccess.getStoreCommandAccess().getStoreKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoreCommand__Group__1__Impl
	rule__StoreCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreCommandAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getStoreCommandAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoreCommand__Group__2__Impl
	rule__StoreCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreCommandAccess().getVarAssignment_2()); }
	(rule__StoreCommand__VarAssignment_2)
	{ after(grammarAccess.getStoreCommandAccess().getVarAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoreCommand__Group__3__Impl
	rule__StoreCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreCommandAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getStoreCommandAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoreCommand__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreCommandAccess().getPathAssignment_4()); }
	(rule__StoreCommand__PathAssignment_4)
	{ after(grammarAccess.getStoreCommandAccess().getPathAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExportCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExportCommand__Group__0__Impl
	rule__ExportCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportCommandAccess().getExport_jsonKeyword_0()); }
	'export_json'
	{ after(grammarAccess.getExportCommandAccess().getExport_jsonKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExportCommand__Group__1__Impl
	rule__ExportCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportCommandAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getExportCommandAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExportCommand__Group__2__Impl
	rule__ExportCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportCommandAccess().getVarAssignment_2()); }
	(rule__ExportCommand__VarAssignment_2)
	{ after(grammarAccess.getExportCommandAccess().getVarAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExportCommand__Group__3__Impl
	rule__ExportCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportCommandAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getExportCommandAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExportCommand__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportCommandAccess().getPathAssignment_4()); }
	(rule__ExportCommand__PathAssignment_4)
	{ after(grammarAccess.getExportCommandAccess().getPathAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateCommand__Group__0__Impl
	rule__CreateCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateCommandAccess().getCreateKeyword_0()); }
	'create'
	{ after(grammarAccess.getCreateCommandAccess().getCreateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateCommand__Group__1__Impl
	rule__CreateCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateCommandAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getCreateCommandAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateCommand__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateCommandAccess().getVarAssignment_2()); }
	(rule__CreateCommand__VarAssignment_2)
	{ after(grammarAccess.getCreateCommandAccess().getVarAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetCommand__Group__0__Impl
	rule__SetCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetCommandAccess().getVarAssignment_0()); }
	(rule__SetCommand__VarAssignment_0)
	{ after(grammarAccess.getSetCommandAccess().getVarAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetCommand__Group__1__Impl
	rule__SetCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetCommandAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getSetCommandAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetCommand__Group__2__Impl
	rule__SetCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetCommandAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getSetCommandAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetCommand__Group__3__Impl
	rule__SetCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetCommandAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getSetCommandAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetCommand__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetCommandAccess().getExpressionAssignment_4()); }
	(rule__SetCommand__ExpressionAssignment_4)
	{ after(grammarAccess.getSetCommandAccess().getExpressionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrintCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrintCommand__Group__0__Impl
	rule__PrintCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintCommandAccess().getPrintKeyword_0()); }
	'print'
	{ after(grammarAccess.getPrintCommandAccess().getPrintKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrintCommand__Group__1__Impl
	rule__PrintCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintCommandAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getPrintCommandAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrintCommand__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintCommandAccess().getExpressionAssignment_2()); }
	(rule__PrintCommand__ExpressionAssignment_2)
	{ after(grammarAccess.getPrintCommandAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteCommand__Group__0__Impl
	rule__DeleteCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteCommandAccess().getDeleteKeyword_0()); }
	'delete'
	{ after(grammarAccess.getDeleteCommandAccess().getDeleteKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteCommand__Group__1__Impl
	rule__DeleteCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteCommandAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getDeleteCommandAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteCommand__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteCommandAccess().getExpressionAssignment_2()); }
	(rule__DeleteCommand__ExpressionAssignment_2)
	{ after(grammarAccess.getDeleteCommandAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddCommand__Group__0__Impl
	rule__AddCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddCommandAccess().getAddKeyword_0()); }
	'add'
	{ after(grammarAccess.getAddCommandAccess().getAddKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddCommand__Group__1__Impl
	rule__AddCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddCommandAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getAddCommandAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddCommand__Group__2__Impl
	rule__AddCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddCommandAccess().getOpAssignment_2()); }
	(rule__AddCommand__OpAssignment_2)
	{ after(grammarAccess.getAddCommandAccess().getOpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddCommand__Group__3__Impl
	rule__AddCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddCommandAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getAddCommandAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddCommand__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddCommandAccess().getExpressionAssignment_4()); }
	(rule__AddCommand__ExpressionAssignment_4)
	{ after(grammarAccess.getAddCommandAccess().getExpressionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RenameCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameCommand__Group__0__Impl
	rule__RenameCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameCommandAccess().getRenameKeyword_0()); }
	'rename'
	{ after(grammarAccess.getRenameCommandAccess().getRenameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameCommand__Group__1__Impl
	rule__RenameCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameCommandAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getRenameCommandAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameCommand__Group__2__Impl
	rule__RenameCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameCommandAccess().getExprAssignment_2()); }
	(rule__RenameCommand__ExprAssignment_2)
	{ after(grammarAccess.getRenameCommandAccess().getExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameCommand__Group__3__Impl
	rule__RenameCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameCommandAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getRenameCommandAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameCommand__Group__4__Impl
	rule__RenameCommand__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameCommandAccess().getOldnameAssignment_4()); }
	(rule__RenameCommand__OldnameAssignment_4)
	{ after(grammarAccess.getRenameCommandAccess().getOldnameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameCommand__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameCommand__Group__5__Impl
	rule__RenameCommand__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameCommand__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameCommandAccess().getLCParserRuleCall_5()); }
	ruleLC
	{ after(grammarAccess.getRenameCommandAccess().getLCParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameCommand__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameCommand__Group__6__Impl
	rule__RenameCommand__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameCommand__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameCommandAccess().getColonKeyword_6()); }
	':'
	{ after(grammarAccess.getRenameCommandAccess().getColonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameCommand__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameCommand__Group__7__Impl
	rule__RenameCommand__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameCommand__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameCommandAccess().getLCParserRuleCall_7()); }
	ruleLC
	{ after(grammarAccess.getRenameCommandAccess().getLCParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameCommand__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameCommand__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameCommand__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameCommandAccess().getNewnameAssignment_8()); }
	(rule__RenameCommand__NewnameAssignment_8)
	{ after(grammarAccess.getRenameCommandAccess().getNewnameAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ApplyCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyCommand__Group__0__Impl
	rule__ApplyCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyCommandAccess().getOnKeyword_0()); }
	'on'
	{ after(grammarAccess.getApplyCommandAccess().getOnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyCommand__Group__1__Impl
	rule__ApplyCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyCommandAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getApplyCommandAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyCommand__Group__2__Impl
	rule__ApplyCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyCommandAccess().getSelectionAssignment_2()); }
	(rule__ApplyCommand__SelectionAssignment_2)
	{ after(grammarAccess.getApplyCommandAccess().getSelectionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyCommand__Group__3__Impl
	rule__ApplyCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyCommandAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getApplyCommandAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyCommand__Group__4__Impl
	rule__ApplyCommand__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyCommandAccess().getIfAssignment_4()); }
	(rule__ApplyCommand__IfAssignment_4)?
	{ after(grammarAccess.getApplyCommandAccess().getIfAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyCommand__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyCommand__Group__5__Impl
	rule__ApplyCommand__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyCommand__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyCommandAccess().getLCParserRuleCall_5()); }
	ruleLC
	{ after(grammarAccess.getApplyCommandAccess().getLCParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyCommand__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyCommand__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyCommand__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyCommandAccess().getExecAssignment_6()); }
	(rule__ApplyCommand__ExecAssignment_6)
	{ after(grammarAccess.getApplyCommandAccess().getExecAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ApplyFilterCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyFilterCommand__Group__0__Impl
	rule__ApplyFilterCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyFilterCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyFilterCommandAccess().getFilterKeyword_0()); }
	'filter'
	{ after(grammarAccess.getApplyFilterCommandAccess().getFilterKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyFilterCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyFilterCommand__Group__1__Impl
	rule__ApplyFilterCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyFilterCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyFilterCommandAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getApplyFilterCommandAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyFilterCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyFilterCommand__Group__2__Impl
	rule__ApplyFilterCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyFilterCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyFilterCommandAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getApplyFilterCommandAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyFilterCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyFilterCommand__Group__3__Impl
	rule__ApplyFilterCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyFilterCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyFilterCommandAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getApplyFilterCommandAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyFilterCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyFilterCommand__Group__4__Impl
	rule__ApplyFilterCommand__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyFilterCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyFilterCommandAccess().getVarNameAssignment_4()); }
	(rule__ApplyFilterCommand__VarNameAssignment_4)
	{ after(grammarAccess.getApplyFilterCommandAccess().getVarNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyFilterCommand__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyFilterCommand__Group__5__Impl
	rule__ApplyFilterCommand__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyFilterCommand__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyFilterCommandAccess().getLCParserRuleCall_5()); }
	ruleLC
	{ after(grammarAccess.getApplyFilterCommandAccess().getLCParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyFilterCommand__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyFilterCommand__Group__6__Impl
	rule__ApplyFilterCommand__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyFilterCommand__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyFilterCommandAccess().getColonKeyword_6()); }
	':'
	{ after(grammarAccess.getApplyFilterCommandAccess().getColonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyFilterCommand__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyFilterCommand__Group__7__Impl
	rule__ApplyFilterCommand__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyFilterCommand__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyFilterCommandAccess().getLCParserRuleCall_7()); }
	ruleLC
	{ after(grammarAccess.getApplyFilterCommandAccess().getLCParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyFilterCommand__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyFilterCommand__Group__8__Impl
	rule__ApplyFilterCommand__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyFilterCommand__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyFilterCommandAccess().getExprAssignment_8()); }
	(rule__ApplyFilterCommand__ExprAssignment_8)
	{ after(grammarAccess.getApplyFilterCommandAccess().getExprAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyFilterCommand__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyFilterCommand__Group__9__Impl
	rule__ApplyFilterCommand__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyFilterCommand__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyFilterCommandAccess().getLCParserRuleCall_9()); }
	ruleLC
	{ after(grammarAccess.getApplyFilterCommandAccess().getLCParserRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyFilterCommand__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyFilterCommand__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyFilterCommand__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyFilterCommandAccess().getRightParenthesisKeyword_10()); }
	')'
	{ after(grammarAccess.getApplyFilterCommandAccess().getRightParenthesisKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ApplyExecCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyExecCommand__Group__0__Impl
	rule__ApplyExecCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExecCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyExecCommandAccess().getApplyKeyword_0()); }
	'apply'
	{ after(grammarAccess.getApplyExecCommandAccess().getApplyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExecCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyExecCommand__Group__1__Impl
	rule__ApplyExecCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExecCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyExecCommandAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getApplyExecCommandAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExecCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyExecCommand__Group__2__Impl
	rule__ApplyExecCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExecCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyExecCommandAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getApplyExecCommandAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExecCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyExecCommand__Group__3__Impl
	rule__ApplyExecCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExecCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyExecCommandAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getApplyExecCommandAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExecCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyExecCommand__Group__4__Impl
	rule__ApplyExecCommand__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExecCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyExecCommandAccess().getVarNameAssignment_4()); }
	(rule__ApplyExecCommand__VarNameAssignment_4)
	{ after(grammarAccess.getApplyExecCommandAccess().getVarNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExecCommand__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyExecCommand__Group__5__Impl
	rule__ApplyExecCommand__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExecCommand__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyExecCommandAccess().getLCParserRuleCall_5()); }
	ruleLC
	{ after(grammarAccess.getApplyExecCommandAccess().getLCParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExecCommand__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyExecCommand__Group__6__Impl
	rule__ApplyExecCommand__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExecCommand__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyExecCommandAccess().getColonKeyword_6()); }
	':'
	{ after(grammarAccess.getApplyExecCommandAccess().getColonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExecCommand__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyExecCommand__Group__7__Impl
	rule__ApplyExecCommand__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExecCommand__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyExecCommandAccess().getLCParserRuleCall_7()); }
	ruleLC
	{ after(grammarAccess.getApplyExecCommandAccess().getLCParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExecCommand__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyExecCommand__Group__8__Impl
	rule__ApplyExecCommand__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExecCommand__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyExecCommandAccess().getExprAssignment_8()); }
	(rule__ApplyExecCommand__ExprAssignment_8)
	{ after(grammarAccess.getApplyExecCommandAccess().getExprAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExecCommand__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyExecCommand__Group__9__Impl
	rule__ApplyExecCommand__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExecCommand__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyExecCommandAccess().getLCParserRuleCall_9()); }
	ruleLC
	{ after(grammarAccess.getApplyExecCommandAccess().getLCParserRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExecCommand__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ApplyExecCommand__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExecCommand__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplyExecCommandAccess().getRightParenthesisKeyword_10()); }
	')'
	{ after(grammarAccess.getApplyExecCommandAccess().getRightParenthesisKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MergeCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MergeCommand__Group__0__Impl
	rule__MergeCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MergeCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMergeCommandAccess().getMergeKeyword_0()); }
	'merge'
	{ after(grammarAccess.getMergeCommandAccess().getMergeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MergeCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MergeCommand__Group__1__Impl
	rule__MergeCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MergeCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMergeCommandAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getMergeCommandAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MergeCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MergeCommand__Group__2__Impl
	rule__MergeCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MergeCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMergeCommandAccess().getSelection1Assignment_2()); }
	(rule__MergeCommand__Selection1Assignment_2)
	{ after(grammarAccess.getMergeCommandAccess().getSelection1Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MergeCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MergeCommand__Group__3__Impl
	rule__MergeCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MergeCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMergeCommandAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getMergeCommandAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MergeCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MergeCommand__Group__4__Impl
	rule__MergeCommand__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MergeCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMergeCommandAccess().getWithKeyword_4()); }
	'with'
	{ after(grammarAccess.getMergeCommandAccess().getWithKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MergeCommand__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MergeCommand__Group__5__Impl
	rule__MergeCommand__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MergeCommand__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMergeCommandAccess().getLCParserRuleCall_5()); }
	ruleLC
	{ after(grammarAccess.getMergeCommandAccess().getLCParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MergeCommand__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MergeCommand__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MergeCommand__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMergeCommandAccess().getSelection2Assignment_6()); }
	(rule__MergeCommand__Selection2Assignment_6)
	{ after(grammarAccess.getMergeCommandAccess().getSelection2Assignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConcatCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcatCommand__Group__0__Impl
	rule__ConcatCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcatCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatCommandAccess().getConcatKeyword_0()); }
	'concat'
	{ after(grammarAccess.getConcatCommandAccess().getConcatKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcatCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcatCommand__Group__1__Impl
	rule__ConcatCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcatCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatCommandAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getConcatCommandAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcatCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcatCommand__Group__2__Impl
	rule__ConcatCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcatCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatCommandAccess().getSelection1Assignment_2()); }
	(rule__ConcatCommand__Selection1Assignment_2)
	{ after(grammarAccess.getConcatCommandAccess().getSelection1Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcatCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcatCommand__Group__3__Impl
	rule__ConcatCommand__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcatCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatCommandAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getConcatCommandAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcatCommand__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcatCommand__Group__4__Impl
	rule__ConcatCommand__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcatCommand__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatCommandAccess().getWithKeyword_4()); }
	'with'
	{ after(grammarAccess.getConcatCommandAccess().getWithKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcatCommand__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcatCommand__Group__5__Impl
	rule__ConcatCommand__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcatCommand__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatCommandAccess().getLCParserRuleCall_5()); }
	ruleLC
	{ after(grammarAccess.getConcatCommandAccess().getLCParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcatCommand__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcatCommand__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcatCommand__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatCommandAccess().getSelection2Assignment_6()); }
	(rule__ConcatCommand__Selection2Assignment_6)
	{ after(grammarAccess.getConcatCommandAccess().getSelection2Assignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group__0__Impl
	rule__OrExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getLeftAssignment_0()); }
	(rule__OrExpr__LeftAssignment_0)
	{ after(grammarAccess.getOrExprAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getGroup_1()); }
	(rule__OrExpr__Group_1__0)*
	{ after(grammarAccess.getOrExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group_1__0__Impl
	rule__OrExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getLCParserRuleCall_1_0()); }
	ruleLC
	{ after(grammarAccess.getOrExprAccess().getLCParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group_1__1__Impl
	rule__OrExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getVerticalLineVerticalLineKeyword_1_1()); }
	'||'
	{ after(grammarAccess.getOrExprAccess().getVerticalLineVerticalLineKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group_1__2__Impl
	rule__OrExpr__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getLCParserRuleCall_1_2()); }
	ruleLC
	{ after(grammarAccess.getOrExprAccess().getLCParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpr__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExprAccess().getRightAssignment_1_3()); }
	(rule__OrExpr__RightAssignment_1_3)
	{ after(grammarAccess.getOrExprAccess().getRightAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group__0__Impl
	rule__AddExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getLeftAssignment_0()); }
	(rule__AddExpr__LeftAssignment_0)
	{ after(grammarAccess.getAddExprAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getGroup_1()); }
	(rule__AddExpr__Group_1__0)*
	{ after(grammarAccess.getAddExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group_1__0__Impl
	rule__AddExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getLCParserRuleCall_1_0()); }
	ruleLC
	{ after(grammarAccess.getAddExprAccess().getLCParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group_1__1__Impl
	rule__AddExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getAmpersandAmpersandKeyword_1_1()); }
	'&&'
	{ after(grammarAccess.getAddExprAccess().getAmpersandAmpersandKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group_1__2__Impl
	rule__AddExpr__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getLCParserRuleCall_1_2()); }
	ruleLC
	{ after(grammarAccess.getAddExprAccess().getLCParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpr__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExprAccess().getRightAssignment_1_3()); }
	(rule__AddExpr__RightAssignment_1_3)
	{ after(grammarAccess.getAddExprAccess().getRightAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpr__Group__0__Impl
	rule__EqualityExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExprAccess().getLeftAssignment_0()); }
	(rule__EqualityExpr__LeftAssignment_0)
	{ after(grammarAccess.getEqualityExprAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExprAccess().getGroup_1()); }
	(rule__EqualityExpr__Group_1__0)?
	{ after(grammarAccess.getEqualityExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpr__Group_1__0__Impl
	rule__EqualityExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExprAccess().getLCParserRuleCall_1_0()); }
	ruleLC
	{ after(grammarAccess.getEqualityExprAccess().getLCParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpr__Group_1__1__Impl
	rule__EqualityExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExprAccess().getOpAssignment_1_1()); }
	(rule__EqualityExpr__OpAssignment_1_1)
	{ after(grammarAccess.getEqualityExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpr__Group_1__2__Impl
	rule__EqualityExpr__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExprAccess().getLCParserRuleCall_1_2()); }
	ruleLC
	{ after(grammarAccess.getEqualityExprAccess().getLCParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpr__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExprAccess().getRightAssignment_1_3()); }
	(rule__EqualityExpr__RightAssignment_1_3)
	{ after(grammarAccess.getEqualityExprAccess().getRightAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparaisonExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparaisonExpr__Group__0__Impl
	rule__ComparaisonExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparaisonExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparaisonExprAccess().getLeftAssignment_0()); }
	(rule__ComparaisonExpr__LeftAssignment_0)
	{ after(grammarAccess.getComparaisonExprAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparaisonExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparaisonExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparaisonExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparaisonExprAccess().getGroup_1()); }
	(rule__ComparaisonExpr__Group_1__0)?
	{ after(grammarAccess.getComparaisonExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparaisonExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparaisonExpr__Group_1__0__Impl
	rule__ComparaisonExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparaisonExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparaisonExprAccess().getLCParserRuleCall_1_0()); }
	ruleLC
	{ after(grammarAccess.getComparaisonExprAccess().getLCParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparaisonExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparaisonExpr__Group_1__1__Impl
	rule__ComparaisonExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparaisonExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparaisonExprAccess().getOpAssignment_1_1()); }
	(rule__ComparaisonExpr__OpAssignment_1_1)
	{ after(grammarAccess.getComparaisonExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparaisonExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparaisonExpr__Group_1__2__Impl
	rule__ComparaisonExpr__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparaisonExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparaisonExprAccess().getLCParserRuleCall_1_2()); }
	ruleLC
	{ after(grammarAccess.getComparaisonExprAccess().getLCParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparaisonExpr__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparaisonExpr__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparaisonExpr__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparaisonExprAccess().getRightAssignment_1_3()); }
	(rule__ComparaisonExpr__RightAssignment_1_3)
	{ after(grammarAccess.getComparaisonExprAccess().getRightAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinusExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinusExpr__Group__0__Impl
	rule__PlusOrMinusExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusExprAccess().getLeftAssignment_0()); }
	(rule__PlusOrMinusExpr__LeftAssignment_0)
	{ after(grammarAccess.getPlusOrMinusExprAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinusExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusExprAccess().getGroup_1()); }
	(rule__PlusOrMinusExpr__Group_1__0)*
	{ after(grammarAccess.getPlusOrMinusExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinusExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinusExpr__Group_1__0__Impl
	rule__PlusOrMinusExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusExprAccess().getLCParserRuleCall_1_0()); }
	ruleLC
	{ after(grammarAccess.getPlusOrMinusExprAccess().getLCParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinusExpr__Group_1__1__Impl
	rule__PlusOrMinusExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusExprAccess().getOpAssignment_1_1()); }
	(rule__PlusOrMinusExpr__OpAssignment_1_1)
	{ after(grammarAccess.getPlusOrMinusExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinusExpr__Group_1__2__Impl
	rule__PlusOrMinusExpr__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusExprAccess().getLCParserRuleCall_1_2()); }
	ruleLC
	{ after(grammarAccess.getPlusOrMinusExprAccess().getLCParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpr__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinusExpr__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpr__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusExprAccess().getRightAssignment_1_3()); }
	(rule__PlusOrMinusExpr__RightAssignment_1_3)
	{ after(grammarAccess.getPlusOrMinusExprAccess().getRightAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDivExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDivExpr__Group__0__Impl
	rule__MulOrDivExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivExprAccess().getLeftAssignment_0()); }
	(rule__MulOrDivExpr__LeftAssignment_0)
	{ after(grammarAccess.getMulOrDivExprAccess().getLeftAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDivExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivExprAccess().getGroup_1()); }
	(rule__MulOrDivExpr__Group_1__0)*
	{ after(grammarAccess.getMulOrDivExprAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDivExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDivExpr__Group_1__0__Impl
	rule__MulOrDivExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivExprAccess().getLCParserRuleCall_1_0()); }
	ruleLC
	{ after(grammarAccess.getMulOrDivExprAccess().getLCParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDivExpr__Group_1__1__Impl
	rule__MulOrDivExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivExprAccess().getOpAssignment_1_1()); }
	(rule__MulOrDivExpr__OpAssignment_1_1)
	{ after(grammarAccess.getMulOrDivExprAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpr__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDivExpr__Group_1__2__Impl
	rule__MulOrDivExpr__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpr__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivExprAccess().getLCParserRuleCall_1_2()); }
	ruleLC
	{ after(grammarAccess.getMulOrDivExprAccess().getLCParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpr__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDivExpr__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpr__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivExprAccess().getRightAssignment_1_3()); }
	(rule__MulOrDivExpr__RightAssignment_1_3)
	{ after(grammarAccess.getMulOrDivExprAccess().getRightAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NotExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotExpr__Group__0__Impl
	rule__NotExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotExprAccess().getExclamationMarkKeyword_0()); }
	'!'
	{ after(grammarAccess.getNotExprAccess().getExclamationMarkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotExpr__Group__1__Impl
	rule__NotExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotExprAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getNotExprAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpr__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpr__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotExprAccess().getExprAssignment_2()); }
	(rule__NotExpr__ExprAssignment_2)
	{ after(grammarAccess.getNotExprAccess().getExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_0__0__Impl
	rule__PrimaryExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getPrimaryExprAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_0__1__Impl
	rule__PrimaryExpr__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getLCParserRuleCall_0_1()); }
	ruleLC
	{ after(grammarAccess.getPrimaryExprAccess().getLCParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_0__2__Impl
	rule__PrimaryExpr__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getExpressionParserRuleCall_0_2()); }
	ruleExpression
	{ after(grammarAccess.getPrimaryExprAccess().getExpressionParserRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_0__3__Impl
	rule__PrimaryExpr__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getLCParserRuleCall_0_3()); }
	ruleLC
	{ after(grammarAccess.getPrimaryExprAccess().getLCParserRuleCall_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpr__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExprAccess().getRightParenthesisKeyword_0_4()); }
	')'
	{ after(grammarAccess.getPrimaryExprAccess().getRightParenthesisKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__0__Impl
	rule__Selector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getVarAssignment_0()); }
	(rule__Selector__VarAssignment_0)
	{ after(grammarAccess.getSelectorAccess().getVarAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__1__Impl
	rule__Selector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getSelectorAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__2__Impl
	rule__Selector__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getSelectorAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__3__Impl
	rule__Selector__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getSelectorAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__4__Impl
	rule__Selector__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getExpressionColAssignment_4()); }
	(rule__Selector__ExpressionColAssignment_4)?
	{ after(grammarAccess.getSelectorAccess().getExpressionColAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__5__Impl
	rule__Selector__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getLCParserRuleCall_5()); }
	ruleLC
	{ after(grammarAccess.getSelectorAccess().getLCParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__6__Impl
	rule__Selector__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getColonKeyword_6()); }
	':'
	{ after(grammarAccess.getSelectorAccess().getColonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__7__Impl
	rule__Selector__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getLCParserRuleCall_7()); }
	ruleLC
	{ after(grammarAccess.getSelectorAccess().getLCParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__8__Impl
	rule__Selector__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getExpressionRowAssignment_8()); }
	(rule__Selector__ExpressionRowAssignment_8)?
	{ after(grammarAccess.getSelectorAccess().getExpressionRowAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__9__Impl
	rule__Selector__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getLCParserRuleCall_9()); }
	ruleLC
	{ after(grammarAccess.getSelectorAccess().getLCParserRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__10__Impl
	rule__Selector__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getRightSquareBracketKeyword_10()); }
	']'
	{ after(grammarAccess.getSelectorAccess().getRightSquareBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getGroup_11()); }
	(rule__Selector__Group_11__0)?
	{ after(grammarAccess.getSelectorAccess().getGroup_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_11__0__Impl
	rule__Selector__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getLCParserRuleCall_11_0()); }
	ruleLC
	{ after(grammarAccess.getSelectorAccess().getLCParserRuleCall_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_11__1__Impl
	rule__Selector__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getLeftSquareBracketKeyword_11_1()); }
	'['
	{ after(grammarAccess.getSelectorAccess().getLeftSquareBracketKeyword_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_11__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_11__2__Impl
	rule__Selector__Group_11__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_11__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getExpressionSubColAssignment_11_2()); }
	(rule__Selector__ExpressionSubColAssignment_11_2)?
	{ after(grammarAccess.getSelectorAccess().getExpressionSubColAssignment_11_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_11__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_11__3__Impl
	rule__Selector__Group_11__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_11__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getLCParserRuleCall_11_3()); }
	ruleLC
	{ after(grammarAccess.getSelectorAccess().getLCParserRuleCall_11_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_11__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_11__4__Impl
	rule__Selector__Group_11__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_11__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getColonKeyword_11_4()); }
	':'
	{ after(grammarAccess.getSelectorAccess().getColonKeyword_11_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_11__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_11__5__Impl
	rule__Selector__Group_11__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_11__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getLCParserRuleCall_11_5()); }
	ruleLC
	{ after(grammarAccess.getSelectorAccess().getLCParserRuleCall_11_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_11__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_11__6__Impl
	rule__Selector__Group_11__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_11__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getExpressionSubRowAssignment_11_6()); }
	(rule__Selector__ExpressionSubRowAssignment_11_6)
	{ after(grammarAccess.getSelectorAccess().getExpressionSubRowAssignment_11_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_11__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_11__7__Impl
	rule__Selector__Group_11__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_11__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getLCParserRuleCall_11_7()); }
	ruleLC
	{ after(grammarAccess.getSelectorAccess().getLCParserRuleCall_11_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_11__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_11__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_11__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getRightSquareBracketKeyword_11_8()); }
	']'
	{ after(grammarAccess.getSelectorAccess().getRightSquareBracketKeyword_11_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldSelect__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSelect__Group__0__Impl
	rule__FieldSelect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelect__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSelectAccess().getFieldKeyword_0()); }
	'field'
	{ after(grammarAccess.getFieldSelectAccess().getFieldKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelect__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSelect__Group__1__Impl
	rule__FieldSelect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelect__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSelectAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getFieldSelectAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelect__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSelect__Group__2__Impl
	rule__FieldSelect__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelect__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSelectAccess().getVarAssignment_2()); }
	(rule__FieldSelect__VarAssignment_2)
	{ after(grammarAccess.getFieldSelectAccess().getVarAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelect__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSelect__Group__3__Impl
	rule__FieldSelect__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelect__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSelectAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getFieldSelectAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelect__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSelect__Group__4__Impl
	rule__FieldSelect__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelect__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSelectAccess().getLeftSquareBracketKeyword_4()); }
	'['
	{ after(grammarAccess.getFieldSelectAccess().getLeftSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelect__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSelect__Group__5__Impl
	rule__FieldSelect__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelect__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSelectAccess().getLCParserRuleCall_5()); }
	ruleLC
	{ after(grammarAccess.getFieldSelectAccess().getLCParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelect__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSelect__Group__6__Impl
	rule__FieldSelect__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelect__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSelectAccess().getExpressionAssignment_6()); }
	(rule__FieldSelect__ExpressionAssignment_6)
	{ after(grammarAccess.getFieldSelectAccess().getExpressionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelect__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSelect__Group__7__Impl
	rule__FieldSelect__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelect__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSelectAccess().getLCParserRuleCall_7()); }
	ruleLC
	{ after(grammarAccess.getFieldSelectAccess().getLCParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelect__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldSelect__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelect__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldSelectAccess().getRightSquareBracketKeyword_8()); }
	']'
	{ after(grammarAccess.getFieldSelectAccess().getRightSquareBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CountExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountExpr__Group__0__Impl
	rule__CountExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CountExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountExprAccess().getCountKeyword_0()); }
	'count'
	{ after(grammarAccess.getCountExprAccess().getCountKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountExpr__Group__1__Impl
	rule__CountExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CountExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountExprAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getCountExprAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountExpr__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CountExpr__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountExprAccess().getExpressionAssignment_2()); }
	(rule__CountExpr__ExpressionAssignment_2)
	{ after(grammarAccess.getCountExprAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LastExpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LastExpr__Group__0__Impl
	rule__LastExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LastExpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLastExprAccess().getLastKeyword_0()); }
	'last'
	{ after(grammarAccess.getLastExprAccess().getLastKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LastExpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LastExpr__Group__1__Impl
	rule__LastExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LastExpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLastExprAccess().getLCParserRuleCall_1()); }
	ruleLC
	{ after(grammarAccess.getLastExprAccess().getLCParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LastExpr__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LastExpr__Group__2__Impl
	rule__LastExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LastExpr__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLastExprAccess().getOpAssignment_2()); }
	(rule__LastExpr__OpAssignment_2)
	{ after(grammarAccess.getLastExprAccess().getOpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LastExpr__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LastExpr__Group__3__Impl
	rule__LastExpr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LastExpr__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLastExprAccess().getLCParserRuleCall_3()); }
	ruleLC
	{ after(grammarAccess.getLastExprAccess().getLCParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LastExpr__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LastExpr__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LastExpr__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLastExprAccess().getExpressionAssignment_4()); }
	(rule__LastExpr__ExpressionAssignment_4)
	{ after(grammarAccess.getLastExprAccess().getExpressionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpr__Group_0__0__Impl
	rule__AtomicExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExprAccess().getIntConstantAction_0_0()); }
	()
	{ after(grammarAccess.getAtomicExprAccess().getIntConstantAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpr__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExprAccess().getValueAssignment_0_1()); }
	(rule__AtomicExpr__ValueAssignment_0_1)
	{ after(grammarAccess.getAtomicExprAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpr__Group_1__0__Impl
	rule__AtomicExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExprAccess().getDoubleConstantAction_1_0()); }
	()
	{ after(grammarAccess.getAtomicExprAccess().getDoubleConstantAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExprAccess().getValueAssignment_1_1()); }
	(rule__AtomicExpr__ValueAssignment_1_1)
	{ after(grammarAccess.getAtomicExprAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpr__Group_2__0__Impl
	rule__AtomicExpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExprAccess().getStringConstantAction_2_0()); }
	()
	{ after(grammarAccess.getAtomicExprAccess().getStringConstantAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpr__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExprAccess().getValueAssignment_2_1()); }
	(rule__AtomicExpr__ValueAssignment_2_1)
	{ after(grammarAccess.getAtomicExprAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpr__Group_3__0__Impl
	rule__AtomicExpr__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExprAccess().getBoolConstantAction_3_0()); }
	()
	{ after(grammarAccess.getAtomicExprAccess().getBoolConstantAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpr__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExprAccess().getValueAssignment_3_1()); }
	(rule__AtomicExpr__ValueAssignment_3_1)
	{ after(grammarAccess.getAtomicExprAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpr__Group_4__0__Impl
	rule__AtomicExpr__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExprAccess().getVariableConstantAction_4_0()); }
	()
	{ after(grammarAccess.getAtomicExprAccess().getVariableConstantAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicExpr__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicExprAccess().getValueAssignment_4_1()); }
	(rule__AtomicExpr__ValueAssignment_4_1)
	{ after(grammarAccess.getAtomicExprAccess().getValueAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__CommandsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getCommandsCommandParserRuleCall_2_0()); }
		ruleCommand
		{ after(grammarAccess.getModelAccess().getCommandsCommandParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__CommandsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getCommandsCommandParserRuleCall_3_0()); }
		ruleCommand
		{ after(grammarAccess.getBlockAccess().getCommandsCommandParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__CondAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileCommandAccess().getCondExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getWhileCommandAccess().getCondExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileCommand__BodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileCommandAccess().getBodyBlockParserRuleCall_4_0()); }
		ruleBlock
		{ after(grammarAccess.getWhileCommandAccess().getBodyBlockParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__CondAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfCommandAccess().getCondExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getIfCommandAccess().getCondExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__ThenBodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfCommandAccess().getThenBodyBlockParserRuleCall_4_0()); }
		ruleBlock
		{ after(grammarAccess.getIfCommandAccess().getThenBodyBlockParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCommand__ElseBodyAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfCommandAccess().getElseBodyBlockParserRuleCall_6_2_0()); }
		ruleBlock
		{ after(grammarAccess.getIfCommandAccess().getElseBodyBlockParserRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadCommand__VarAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoadCommandAccess().getVarIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getLoadCommandAccess().getVarIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadCommand__PathAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoadCommandAccess().getPathSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getLoadCommandAccess().getPathSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreCommand__VarAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoreCommandAccess().getVarIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getStoreCommandAccess().getVarIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreCommand__PathAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoreCommandAccess().getPathSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getStoreCommandAccess().getPathSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportCommand__VarAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExportCommandAccess().getVarIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getExportCommandAccess().getVarIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportCommand__PathAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExportCommandAccess().getPathSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getExportCommandAccess().getPathSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateCommand__VarAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateCommandAccess().getVarIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getCreateCommandAccess().getVarIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCommand__VarAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetCommandAccess().getVarCsvsExprParserRuleCall_0_0()); }
		ruleCsvsExpr
		{ after(grammarAccess.getSetCommandAccess().getVarCsvsExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCommand__ExpressionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetCommandAccess().getExpressionExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getSetCommandAccess().getExpressionExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintCommand__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrintCommandAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getPrintCommandAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteCommand__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteCommandAccess().getExpressionCsvsExprParserRuleCall_2_0()); }
		ruleCsvsExpr
		{ after(grammarAccess.getDeleteCommandAccess().getExpressionCsvsExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCommand__OpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddCommandAccess().getOpAlternatives_2_0()); }
		(rule__AddCommand__OpAlternatives_2_0)
		{ after(grammarAccess.getAddCommandAccess().getOpAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCommand__ExpressionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddCommandAccess().getExpressionCsvsExprParserRuleCall_4_0()); }
		ruleCsvsExpr
		{ after(grammarAccess.getAddCommandAccess().getExpressionCsvsExprParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameCommand__ExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameCommandAccess().getExprCsvsExprParserRuleCall_2_0()); }
		ruleCsvsExpr
		{ after(grammarAccess.getRenameCommandAccess().getExprCsvsExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameCommand__OldnameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameCommandAccess().getOldnameExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getRenameCommandAccess().getOldnameExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameCommand__NewnameAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameCommandAccess().getNewnameExpressionParserRuleCall_8_0()); }
		ruleExpression
		{ after(grammarAccess.getRenameCommandAccess().getNewnameExpressionParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyCommand__SelectionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplyCommandAccess().getSelectionCsvsExprParserRuleCall_2_0()); }
		ruleCsvsExpr
		{ after(grammarAccess.getApplyCommandAccess().getSelectionCsvsExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyCommand__IfAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplyCommandAccess().getIfApplyFilterCommandParserRuleCall_4_0()); }
		ruleApplyFilterCommand
		{ after(grammarAccess.getApplyCommandAccess().getIfApplyFilterCommandParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyCommand__ExecAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplyCommandAccess().getExecApplyExecCommandParserRuleCall_6_0()); }
		ruleApplyExecCommand
		{ after(grammarAccess.getApplyCommandAccess().getExecApplyExecCommandParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyFilterCommand__VarNameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplyFilterCommandAccess().getVarNameIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getApplyFilterCommandAccess().getVarNameIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyFilterCommand__ExprAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplyFilterCommandAccess().getExprExpressionParserRuleCall_8_0()); }
		ruleExpression
		{ after(grammarAccess.getApplyFilterCommandAccess().getExprExpressionParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExecCommand__VarNameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplyExecCommandAccess().getVarNameIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getApplyExecCommandAccess().getVarNameIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ApplyExecCommand__ExprAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplyExecCommandAccess().getExprExpressionParserRuleCall_8_0()); }
		ruleExpression
		{ after(grammarAccess.getApplyExecCommandAccess().getExprExpressionParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MergeCommand__Selection1Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMergeCommandAccess().getSelection1CsvsExprParserRuleCall_2_0()); }
		ruleCsvsExpr
		{ after(grammarAccess.getMergeCommandAccess().getSelection1CsvsExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MergeCommand__Selection2Assignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMergeCommandAccess().getSelection2CsvsExprParserRuleCall_6_0()); }
		ruleCsvsExpr
		{ after(grammarAccess.getMergeCommandAccess().getSelection2CsvsExprParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcatCommand__Selection1Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcatCommandAccess().getSelection1CsvsExprParserRuleCall_2_0()); }
		ruleCsvsExpr
		{ after(grammarAccess.getConcatCommandAccess().getSelection1CsvsExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcatCommand__Selection2Assignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcatCommandAccess().getSelection2CsvsExprParserRuleCall_6_0()); }
		ruleCsvsExpr
		{ after(grammarAccess.getConcatCommandAccess().getSelection2CsvsExprParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExprAccess().getLeftAddExprParserRuleCall_0_0()); }
		ruleAddExpr
		{ after(grammarAccess.getOrExprAccess().getLeftAddExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__RightAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExprAccess().getRightAddExprParserRuleCall_1_3_0()); }
		ruleAddExpr
		{ after(grammarAccess.getOrExprAccess().getRightAddExprParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExprAccess().getLeftEqualityExprParserRuleCall_0_0()); }
		ruleEqualityExpr
		{ after(grammarAccess.getAddExprAccess().getLeftEqualityExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpr__RightAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExprAccess().getRightEqualityExprParserRuleCall_1_3_0()); }
		ruleEqualityExpr
		{ after(grammarAccess.getAddExprAccess().getRightEqualityExprParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExprAccess().getLeftComparaisonExprParserRuleCall_0_0()); }
		ruleComparaisonExpr
		{ after(grammarAccess.getEqualityExprAccess().getLeftComparaisonExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExprAccess().getOpAlternatives_1_1_0()); }
		(rule__EqualityExpr__OpAlternatives_1_1_0)
		{ after(grammarAccess.getEqualityExprAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__RightAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExprAccess().getRightComparaisonExprParserRuleCall_1_3_0()); }
		ruleComparaisonExpr
		{ after(grammarAccess.getEqualityExprAccess().getRightComparaisonExprParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparaisonExpr__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparaisonExprAccess().getLeftPlusOrMinusExprParserRuleCall_0_0()); }
		rulePlusOrMinusExpr
		{ after(grammarAccess.getComparaisonExprAccess().getLeftPlusOrMinusExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparaisonExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparaisonExprAccess().getOpAlternatives_1_1_0()); }
		(rule__ComparaisonExpr__OpAlternatives_1_1_0)
		{ after(grammarAccess.getComparaisonExprAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparaisonExpr__RightAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparaisonExprAccess().getRightPlusOrMinusExprParserRuleCall_1_3_0()); }
		rulePlusOrMinusExpr
		{ after(grammarAccess.getComparaisonExprAccess().getRightPlusOrMinusExprParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpr__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusExprAccess().getLeftMulOrDivExprParserRuleCall_0_0()); }
		ruleMulOrDivExpr
		{ after(grammarAccess.getPlusOrMinusExprAccess().getLeftMulOrDivExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusExprAccess().getOpAlternatives_1_1_0()); }
		(rule__PlusOrMinusExpr__OpAlternatives_1_1_0)
		{ after(grammarAccess.getPlusOrMinusExprAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinusExpr__RightAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusExprAccess().getRightMulOrDivExprParserRuleCall_1_3_0()); }
		ruleMulOrDivExpr
		{ after(grammarAccess.getPlusOrMinusExprAccess().getRightMulOrDivExprParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpr__LeftAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivExprAccess().getLeftPrimaryExprParserRuleCall_0_0()); }
		rulePrimaryExpr
		{ after(grammarAccess.getMulOrDivExprAccess().getLeftPrimaryExprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpr__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivExprAccess().getOpAlternatives_1_1_0()); }
		(rule__MulOrDivExpr__OpAlternatives_1_1_0)
		{ after(grammarAccess.getMulOrDivExprAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDivExpr__RightAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivExprAccess().getRightPrimaryExprParserRuleCall_1_3_0()); }
		rulePrimaryExpr
		{ after(grammarAccess.getMulOrDivExprAccess().getRightPrimaryExprParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpr__ExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotExprAccess().getExprPrimaryExprParserRuleCall_2_0()); }
		rulePrimaryExpr
		{ after(grammarAccess.getNotExprAccess().getExprPrimaryExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__VarAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getVarIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSelectorAccess().getVarIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__ExpressionColAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getExpressionColCsvsExprParserRuleCall_4_0()); }
		ruleCsvsExpr
		{ after(grammarAccess.getSelectorAccess().getExpressionColCsvsExprParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__ExpressionRowAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getExpressionRowCsvsExprParserRuleCall_8_0()); }
		ruleCsvsExpr
		{ after(grammarAccess.getSelectorAccess().getExpressionRowCsvsExprParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__ExpressionSubColAssignment_11_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getExpressionSubColCsvsExprParserRuleCall_11_2_0()); }
		ruleCsvsExpr
		{ after(grammarAccess.getSelectorAccess().getExpressionSubColCsvsExprParserRuleCall_11_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__ExpressionSubRowAssignment_11_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getExpressionSubRowCsvsExprParserRuleCall_11_6_0()); }
		ruleCsvsExpr
		{ after(grammarAccess.getSelectorAccess().getExpressionSubRowCsvsExprParserRuleCall_11_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelect__VarAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldSelectAccess().getVarIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldSelectAccess().getVarIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSelect__ExpressionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldSelectAccess().getExpressionPrimaryExprParserRuleCall_6_0()); }
		rulePrimaryExpr
		{ after(grammarAccess.getFieldSelectAccess().getExpressionPrimaryExprParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountExpr__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCountExprAccess().getExpressionPrimaryExprParserRuleCall_2_0()); }
		rulePrimaryExpr
		{ after(grammarAccess.getCountExprAccess().getExpressionPrimaryExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LastExpr__OpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLastExprAccess().getOpAlternatives_2_0()); }
		(rule__LastExpr__OpAlternatives_2_0)
		{ after(grammarAccess.getLastExprAccess().getOpAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LastExpr__ExpressionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLastExprAccess().getExpressionCsvsExprParserRuleCall_4_0()); }
		ruleCsvsExpr
		{ after(grammarAccess.getLastExprAccess().getExpressionCsvsExprParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExprAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomicExprAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExprAccess().getValueDOUBLETerminalRuleCall_1_1_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getAtomicExprAccess().getValueDOUBLETerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExprAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAtomicExprAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExprAccess().getValueAlternatives_3_1_0()); }
		(rule__AtomicExpr__ValueAlternatives_3_1_0)
		{ after(grammarAccess.getAtomicExprAccess().getValueAlternatives_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__ValueAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicExprAccess().getValueIDTerminalRuleCall_4_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAtomicExprAccess().getValueIDTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_DOUBLE : RULE_INT '.' RULE_INT;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
